<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luo.dao.StudentEntityMapper">
  <resultMap id="BaseResultMap" type="com.luo.entity.StudentEntity">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="student_num" jdbcType="VARCHAR" property="studentNum" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="t_class_id" jdbcType="VARCHAR" property="tClassId" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="speciality_id" jdbcType="VARCHAR" property="specialityId" />
    <result column="college_id" jdbcType="VARCHAR" property="collegeId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, sex, student_num, age, password, create_time, is_deleted, t_class_id, card_id, 
    join_time, speciality_id, college_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.luo.entity.StudentEntity">
    insert into student (id, name, sex, student_num, 
      age, password, create_time, 
      is_deleted, t_class_id, card_id, 
      join_time, speciality_id, college_id
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=BIT}, #{studentNum,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{tClassId,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, 
      #{joinTime,jdbcType=TIMESTAMP}, #{specialityId,jdbcType=VARCHAR}, #{collegeId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.luo.entity.StudentEntity">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="studentNum != null">
        student_num,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="tClassId != null">
        t_class_id,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
      <if test="specialityId != null">
        speciality_id,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="studentNum != null">
        #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="tClassId != null">
        #{tClassId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="specialityId != null">
        #{specialityId,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.luo.entity.StudentEntity">
    update student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="studentNum != null">
        student_num = #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="tClassId != null">
        t_class_id = #{tClassId,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="specialityId != null">
        speciality_id = #{specialityId,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luo.entity.StudentEntity">
    update student
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      student_num = #{studentNum,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      t_class_id = #{tClassId,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      speciality_id = #{specialityId,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="classStuCount" parameterType="String" resultType="Integer">
    select count(1) from student
    where is_deleted = 0
    <if test="tClassId!=0 and tClassId!=''">
    and t_class_id = #{tClassId,jdbcType=VARCHAR}
  </select>
</mapper>